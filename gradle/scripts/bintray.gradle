// we want to make sure we have no leftovers before a release upload
// resource pre-processing for instance has to be re-done
bintrayUpload.dependsOn tasks.clean
bintrayUpload.dependsOn tasks.jfxDeploy

def getPropOrEnv = { String prop, String envVar, String defaultValue = null ->
    if (project.hasProperty(prop)) {
        return project.property(prop);
    }
    return System.getenv(envVar) ?: defaultValue;
}

ext {
    githubUser = getPropOrEnv('githubUser', 'GITHUB_USER')
    githubRepoName = project.name
    githubSlug = "$githubUser/$githubRepoName"
    githubRepoUrl = "https://github.com/$githubSlug"
}

bintray {
    user = getPropOrEnv('bintrayUser', 'BINTRAY_USER', githubUser)
    key = getPropOrEnv('bintrayApiKey', 'BINTRAY_KEY')
    configurations = ['archives']
    filesSpec {
        from 'build/distributions'
        into 'installers'
    }

    publish = true // the version should be auto published after an upload

    pkg {
        repo = getPropOrEnv('bintrayRepoApps', 'BINTRAY_REPO_APPS')
        name = project.name
        desc = project.description
        labels = project.labels
        licenses = ['MIT']

        websiteUrl = githubRepoUrl
        issueTrackerUrl = githubRepoUrl + '/issues'
        vcsUrl = githubRepoUrl + '.git'
        githubRepo = githubSlug
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            desc = project.description
            vcsTag = 'v' + project.version
            gpg { sign = true }
        }
    }
}

apply plugin: 'org.hildan.travis-bintray'

travis {
    bintray {
        user = getPropOrEnv('bintrayUser', 'BINTRAY_USER')
        repo = getPropOrEnv('bintrayRepoApps', 'BINTRAY_REPO_APPS')
    }
    github {
        user = getPropOrEnv('githubUser', 'GITHUB_USER')
    }
    release {
        gpgSign = true
    }
    labels = project.labels
    licenses = ['MIT']
    files = [
            [includePattern: jar.archivePath.path, excludePattern: '', uploadPattern: 'installers/$1-setup\\.$2'],
            [includePattern: 'build/distributions/(.*)\\.(exe|msi)', excludePattern: '', uploadPattern: 'installers/$1-setup\\.$2'],
            [includePattern: 'build/distributions/(.*\\.(app|deb))', excludePattern: '', uploadPattern: 'installers/$1']
    ]
}

